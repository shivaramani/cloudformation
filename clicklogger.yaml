
# this is using Serverless Application Model - SAM
# aws s3 mb s3://clicklogger-dev
# aws cloudformation package --template-file clicklogger.yaml --output-template-file outputclicklogger.yaml --s3-bucket clicklogger-dev
# aws cloudformation deploy  --template-file outputclicklogger.yaml  --stack-name clickloggersam --capabilities CAPABILITY_IAM --parameter-overrides Environment=dev

AWSTemplateFormatVersion: 2010-09-09
Parameters:
  Environment:
    Type: String
  
Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties: 
      BucketName: clicklogger-dev1
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
    DeletionPolicy: Delete

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: MyPolicy
        Statement:
          - - Sid: ReadBucketS3Group
            - Principal: '*'
            - Effect: Allow
            - Action: s3:GetObject
            - Resource: !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref S3Bucket
                  - /*
      Bucket: !Ref S3Bucket

  ClickLoggerTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: clickloggerlambda-dev
      PrimaryKey:
        Name: correlationid
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  ClickLoggerAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Sub ${Environment}
      #Body:
      DefinitionBody:
        swagger: 2.0
        info:
          title:
            Ref: AWS::StackName
        paths:
          /test:
            get: 
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ClickLoggerLambda.Arn}/invocations
              responses: {}
  ClickLoggerLambda:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: Python3.7
      CodeUri: src
      Handler: sample.lambda_handler
      MemorySize: 128
      Timeout: 30
      Policies:
        - AWSLambdaBasicExecutionRole
        - AmazonDynamoDBFullAccess
      Events:
        MyEndpoint:
          Type: Api 
          Properties:
            Path: /test
            Method: get
            RestApiId:
              Ref: ClickLoggerAPI
      Environment:
        Variables:
          MyTableName: !Ref ClickLoggerTable
  
Outputs:
  WebsiteURL:
    Value: !GetAtt
      - S3Bucket
      - WebsiteURL
    Description: Bucket description
  S3BucketSecureURL:
    Value: !Join
      - ''
      - - 'https://'
        - !GetAtt
          - S3Bucket
          - DomainName
    Description: Secure bucket description
  LambdaTable:
    Value: !Ref ClickLoggerTable
  
  APIGWURL:
    Value: https://${ClickLoggerAPI}.execute-api.${AWS::Region}.amazonaws.com/dev/dev