
# aws cloudformation create-stack --stack-name clickloggeralsd --template-body file://clicklogger.yaml --capabilities CAPABILITY_IAM  
# aws s3 mb s3://clicklogger-dev
# aws cloudformation package --template-file clicklogger.yaml --output-template-file outputclicklogger.yaml --s3-bucket clicklogger-dev
# aws cloudformation deploy  --template-file outputclicklogger.yaml  --stack-name clickloggeralsd  --capabilities CAPABILITY_IAM 

AWSTemplateFormatVersion: 2010-09-09
Parameters:
  Environment:
    Type: String
  HashKeyElementName: 
    Description: Name for the column
    Type: String
    MinLength: '1'
    MaxLength: '2048'
    AllowedPattern: '[a-zA-Z0-9]'
    ConstraintDescription: Should be A-Z and 0-9
  HashKeyElementType:
    Description: Type for the column
    Type: String
    MinLength: '1'
    MaxLength: '32'
    AllowedPattern: '[S|N]'
    ConstraintDescription: Should be a string or numeric

Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties: 
      BucketName: clicklogger-dev1
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
    DeletionPolicy: Delete

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: MyPolicy
        Statement:
          - - Sid: ReadBucketS3Group
            - Principal: '*'
            - Effect: Allow
            - Action: 's3:GetObject'
            - Resource: !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref S3Bucket
                  - /*
      Bucket: !Ref S3Bucket

  ClickLoggerTable:
    #Type: AWS::DynamoDB::Table
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: clicklogger-dev
      #KeySchema:
        #AttributeName: correlationid
        #KeyType: HASH
      #PrimaryKey:
      #  Name: correlationid
      #  Type: String
      AttributeDefinition:
        AttributeName: !Ref HashKeyElementName
        AttributeType: !Ref HashKeyElementType
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  ClickLoggerLambda:
    #Type: AWS::Lambda::Function
    Type: AWS::Serverless::Function
    Properties:
      Runtime: Python3.7
      CodeUri: src
      Handler: sample.lambda_handler
      #CodeUri: s3://clicklogger-dev/fb4f14efaaf1c5a8bd5a188be3246ad3
      #Handler: sample.lambda_handler
      MemorySize: 128
      Timeout: 30
      Role: 
        Fn::GetAtt: 
          - "LambdaExecutionRole"
          - "Arn"
      Policies:
        - AWSLambdaBasicExecutionRold
        - AmazonDynamoDBFullAccess

  ClickLoggerAPI:
    #Type: AWS::ApiGateway::RestApi
    Type: AWS::Serverless::Api
    Properties:
      #Body:
      DefinitionBody:
        swagger: 2.0
        info:
          title:
            ref: AWS::StackName
        paths:
          /dev:
            get: 
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ClickLoggerLambda.Arn}/invocations
              responses: {}

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: root
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:*
            Resource: arn:aws:logs:*:*:*

Outputs:
  WebsiteURL:
    Value: !GetAtt
      - S3Bucket
      - WebsiteURL
    Description: Bucket description
  S3BucketSecureURL:
    Value: !Join
      - ''
      - - 'https://'
        - !GetAtt
          - S3Bucket
          - DomainName
    Description: Secure bucket description
  LambdaTable:
    Value: !Ref ClickLoggerTable
  
  APIGWURL:
    Value: https://${ClickLoggerAPI}.execute-api.${AWS::Region}.amazonaws.com/dev/dev